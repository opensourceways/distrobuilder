image:
  name: openEuler-20.03-LTS-SP2
  distribution: openEuler
  release: openEuler-20.03-LTS-SP2
  description: |-
    openEuler {{ image.release }}
  architecture: x86_64
source:
  downloader: openeuler-http
  url: https://repo.openeuler.org
targets:
  lxc:
    create-message: |
      You just created a {{ image.description }} container.
    config:
      - type: all
        before: 5
        content: |-
          lxc.include = LXC_TEMPLATE_CONFIG/centos.common.conf

      - type: user
        before: 5
        content: |-
          lxc.include = LXC_TEMPLATE_CONFIG/centos.userns.conf

      - type: all
        after: 4
        content: |-
          lxc.include = LXC_TEMPLATE_CONFIG/common.conf

      - type: user
        after: 4
        content: |-
          lxc.include = LXC_TEMPLATE_CONFIG/userns.conf

      - type: all
        content: |-
          lxc.arch = {{ image.architecture_kernel }}

files:
  - name: hostname
    path: /etc/hostname
    generator: hostname

  - name: hosts
    path: /etc/hosts
    generator: hosts

  - path: /etc/machine-id
    generator: dump

  - path: /etc/fstab
    generator: dump

  - path: /var/lib/dbus/machine-id
    generator: remove

  - name: ifcfg-eth0
    path: /etc/sysconfig/network-scripts/ifcfg-eth0
    generator: dump
    templated: true
    content: |-
      DEVICE=eth0
      BOOTPROTO=dhcp
      ONBOOT=yes
      HOSTNAME=LXC_NAME
      NM_CONTROLLED=no
      TYPE=Ethernet
      MTU=
      DHCP_HOSTNAME=LXC_NAME
    releases:
      - 20.03-LTS-SP2
    types:
      - container

  - name: ifcfg-eth0
    path: /etc/sysconfig/network-scripts/ifcfg-eth0
    generator: dump
    templated: true
    content: |-
      DEVICE=eth0
      BOOTPROTO=dhcp
      ONBOOT=yes
      HOSTNAME=LXC_NAME
      TYPE=Ethernet
      MTU=
      DHCP_HOSTNAME=LXC_NAME
    releases:
      - 20.03-LTS-SP2
    types:
      - container

  - name: ifcfg-eth0.lxd
    path: /etc/sysconfig/network-scripts/ifcfg-eth0
    generator: template
    content: |-
      DEVICE=eth0
      BOOTPROTO=dhcp
      ONBOOT=yes
      HOSTNAME={{ container.name }}
      NM_CONTROLLED=no
      TYPE=Ethernet
      MTU=
      DHCP_HOSTNAME={{ container.name }}
    releases:
      - 20.03-LTS-SP2

  - name: ifcfg-eth0.lxd
    path: /etc/sysconfig/network-scripts/ifcfg-eth0
    generator: template
    content: |-
      DEVICE=eth0
      BOOTPROTO=dhcp
      ONBOOT=yes
      HOSTNAME={{ container.name }}
      TYPE=Ethernet
      MTU=
      DHCP_HOSTNAME={{ container.name }}
      IPV6INIT=yes
    releases:
      - 20.03-LTS-SP2
    types:
      - container

  - name: ifcfg-enp5s0.lxd
    path: /etc/sysconfig/network-scripts/ifcfg-enp5s0
    generator: template
    content: |-
      DEVICE=enp5s0
      BOOTPROTO=dhcp
      ONBOOT=yes
      HOSTNAME={{ container.name }}
      TYPE=Ethernet
      MTU=
      DHCP_HOSTNAME={{ container.name }}
    releases:
      - 20.03-LTS-SP2
    types:
      - vm

  - path: /etc/default/grub
    generator: dump
    content: |-
      # Set the recordfail timeout
      GRUB_RECORDFAIL_TIMEOUT=0
      # Do not wait on grub prompt
      GRUB_TIMEOUT=0
      # Set the default commandline
      GRUB_CMDLINE_LINUX_DEFAULT="${GRUB_CMDLINE_LINUX_DEFAULT} console=tty1 console=ttyS0"
      # Set the grub console type
      GRUB_TERMINAL=console
      # Disable os-prober
      GRUB_DISABLE_OS_PROBER=true
    types:
      - vm

  - path: /etc/dracut.conf.d/lxd.conf
    generator: dump
    content: |-
      add_drivers+="virtio_scsi virtio_pci virtio_console"
    types:
      - vm
    releases:
      - 20.03-LTS-SP2

  - path: /etc/dracut.conf.d/lxd.conf
    generator: dump
    content: |-
      add_drivers+="virtio_scsi virtio_console sd_mod"
    types:
      - vm
    releases:
      - 20.03-LTS-SP2

  - generator: fstab
    types:
      - vm

  - name: lxd-agent-workaround.service
    path: /etc/systemd/system/lxd-agent-workaround.service
    generator: dump
    content: |-
      [Unit]
      Description=LXD - agent (openEuler workaround)
      Before=lxd-agent.service

      [Service]
      Type=oneshot
      ExecStart=-/bin/mkdir /run/lxd_agent

      [Install]
      WantedBy=multi-user.target
    types:
      - vm
    releases:
      - 20.03-LTS-SP2

  - name: lxd-agent.override
    path: /etc/systemd/system/lxd-agent.service.d/lxd.conf
    generator: dump
    content: |-
      [Service]
      WorkingDirectory=/run/lxd_agent
    types:
      - vm
    releases:
      - 20.03-LTS-SP2

  - name: 86-nm-unmanaged.rules
    path: /etc/udev/rules.d/86-nm-unmanaged.rules
    generator: dump
    content: |-
      ENV{ID_NET_DRIVER}=="veth", ENV{NM_UNMANAGED}="0"
    releases:
      - 20.03-LTS-SP2

  - name: network
    path: /etc/sysconfig/network
    generator: dump
    templated: true
    content: |-
      NETWORKING=yes
      HOSTNAME=LXC_NAME

  - name: network.lxd
    path: /etc/sysconfig/network
    generator: template
    content: |-
      NETWORKING=yes
      HOSTNAME={{ container.name }}

  - name: meta-data
    generator: cloud-init
    variants:
      - cloud

  - name: network-config
    generator: cloud-init
    variants:
      - cloud
    releases:
      - 20.03-LTS-SP2

  - name: network-config
    generator: cloud-init
    content: |-
      {% if config_get("user.network-config", "") == "" %}version: 1
      config:
        - type: physical
          name: {% if instance.type == "virtual-machine" %}enp5s0{% else %}eth0{% endif %}
          subnets:
            - type: {% if config_get("user.network_mode", "") == "link-local" %}manual{% else %}dhcp{% endif %}
              control: auto
            - type: dhcp6
              control: auto{% else %}{{ config_get("user.network-config", "") }}{% endif %}
    variants:
      - cloud
    releases:
      - 20.03-LTS-SP2

  - name: user-data
    generator: cloud-init
    variants:
      - cloud

  - name: vendor-data
    generator: cloud-init
    variants:
      - cloud

  - generator: lxd-agent
    types:
      - vm

packages:
  manager: yum
  update: true
  cleanup: true
  sets:
    - packages:
        - cronie
        - cronie-noanacron
        - curl
        - dhclient
        - hostname
        - initscripts
        - openssh-clients
        - passwd
        - policycoreutils
        - rootfiles
        - sudo
        - rsyslog
        - vim-minimal
      action: install

    - packages:
        - network-scripts
      action: install
      types:
        - container
      variants:
        - default
      releases:
        - 20.03-LTS-SP2
      architectures:
        - x86_64
        - aarch64
        - i386
        - ppc64le

    - packages:
        - NetworkManager
      action: install
      types:
        - container
      variants:
        - default
      releases:
        - 20.03-LTS-SP2
      architectures:
        - armhfp

    - packages:
        - NetworkManager
      action: install
      types:
        - vm
      variants:
        - default

    - packages:
        - cloud-init
        - openssh-server
        - NetworkManager
      action: install
      variants:
        - cloud

    - packages:
        - cloud-utils-growpart
      action: install
      types:
        - vm
      variants:
        - cloud

    - packages:
        - shim
      action: install
      types:
        - vm
      releases:
        - 20.03-LTS-SP2
    - packages:
        - kernel-plus
      action: install
      types:
        - vm
      releases:
        - 20.03-LTS-SP2

    - packages:
        - kernel
      action: install
      types:
        - vm
      releases:
        - 20.03-LTS-SP2

    - packages:
        - grub2-efi-x64
      action: install
      types:
        - vm
      releases:
        - 20.03-LTS-SP2
      architectures:
        - x86_64

    - packages:
        - grub2-efi-aarch64
      action: install
      types:
        - vm
      releases:
        - 20.03-LTS-SP2
      architectures:
        - aaarch64

actions:
  - trigger: post-unpack
    action: |-
      #!/bin/sh
      set -eux

      # Enable the centosplus repo which has a kernel with 9p support
      sed -i 's/^enabled=0/enabled=1/' /etc/yum.repos.d/CentOS-Base.repo
    types:
      - vm
    releases:
      - 20.03-LTS-SP2

  - trigger: post-unpack
    action: |-
      #!/bin/sh
      set -eux

      # Enable the centosplus repo which has a kernel with 9p support
      sed -i 's/^enabled=0/enabled=1/' /etc/yum.repos.d/CentOS-Linux-Plus.repo
    types:
      - vm
    releases:
      - 20.03-LTS-SP2

  - trigger: post-unpack
    action: |-
      #!/bin/sh
      # Generate machine-id in order for the kernel stuff to be configured properly
      systemd-machine-id-setup
    types:
      - vm
    releases:
      - 20.03-LTS-SP2

  - trigger: post-packages
    action: |-
      #!/bin/sh
      set -eux

      # Disable SELinux
      mkdir -p /selinux
      echo 0 > /selinux/enforce

      # Disable loginuid in PAM stack
      sed -i '/^session.*pam_loginuid.so/s/^session/# session/' /etc/pam.d/*

  - trigger: post-files
    action: |-
      #!/bin/sh
      set -eux

      mount -t tmpfs tmpfs /sys/firmware
      mkdir /sys/firmware/efi

      # Regenerate initramfs
      kver=$(ls /boot/initramfs-*.img | sed -r 's#.*initramfs-(.+)\.img#\1#')
      dracut --kver "${kver}" -f

      target="$(readlink -f /etc/grub2-efi.cfg)"
      grub2-mkconfig -o "${target}"

      umount /sys/firmware

      sed -i "s#root=[^ ]*#root=/dev/sda2#g" "${target}"

      # Workaround for broken systemd in centos7
      systemctl enable lxd-agent-workaround.service
    types:
      - vm
    releases:
      - 20.03-LTS-SP2

  - trigger: post-files
    action: |-
      #!/bin/sh
      set -eux

      # Regenerate initramfs
      kver=$(ls /boot/initramfs-*.img | sed -r 's#.*initramfs-(.+)\.img#\1#')
      dracut --kver "${kver}" -f

      target="$(readlink -f /etc/grub2-efi.cfg)"
      grub2-mkconfig -o "${target}"

      sed -i "s#root=[^ ]*#root=/dev/sda2#g" "${target}"
    types:
      - vm
    releases:
      - 20.03-LTS-SP2

  - trigger: post-files
    action: |-
      #!/bin/sh
      set -eux

      systemctl enable NetworkManager.service
    types:
      - vm
    variants:
      - default

  - trigger: post-files
    action: |-
      #!/bin/sh
      set -eux

      systemctl enable network
    types:
      - container
    variants:
      - default
    releases:
      - 20.03-LTS-SP2
